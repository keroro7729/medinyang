plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'jinTeam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.json:json:20231013'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.google.api-client:google-api-client:2.7.0' // 2.2.0에서 2.7.0으로 업그레이드
	implementation 'com.google.http-client:google-http-client-gson:1.43.3'

	// JPA (Hibernate 기반 ORM)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MySQL 연결 드라이버
	runtimeOnly 'com.mysql:mysql-connector-j'

	//tymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//lombok
	implementation('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
}

tasks.named('test') {
	useJUnitPlatform()
}

// 기존: Gradle이 구성 단계에서 모든 JavaCompile 태스크를 즉시 순회하며 설정함
// 단점: 모든 태스크를 미리 구성하므로 프로젝트가 클 경우 느려질 수 있음

// 변경: configureEach를 사용하면 JavaCompile 태스크가 생성될 때마다 하나씩 설정(lazy configuration)
// 장점: 필요할 때만 설정되어 구성 시간이 단축됨 → Gradle 최신 스타일에 부합함
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
